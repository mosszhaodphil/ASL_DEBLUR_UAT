#!/bin/sh

# ASL_DEBLUR Deconvolution correction for T2 blurring in GRASE-ASL
#
# Michael Chappell, IBME & FMRIB Image Analysis Group
#
# Copyright (c) 2011-13 University of Oxford
#
# SHCOPYRIGHT

Usage() {
    echo "ASL_DEBLUR"
    echo "Version: 0.2 (beta)"
    echo "Correct T2 (z) blurring of GRASE-ASL"
    echo ""
    echo "Usage (optional parameters in {}):"
    echo " --matlab   : Location to find MATLAB installation or MATLAB Compiler Runtime"
    echo "              The latter may be obtained from www.mathworks.com/products/complier"
    echo " -i         : ASL data file"
    echo " {-o}       : Output name - {default: asldata_deblur}"
    echo " -m         : mask (in native space of ASL data)"
    echo " --kernel   : Deblurring kernel {default: direct}"
    echo " --method   : Deblurring method {default: fft}"
    echo ""
    echo " Supply exsiting residuals:"
    echo "--residuals : Image containging the resdiuals from a model fit"
    echo ""
    echo " Calculate residuals from model fit (using BASIL):"
    echo " TI series analysis options"
    echo " --tis     : comma separated list of inversion times, e.g. --tis 0.2,0.4,0.6"
    echo " --casl    : Labelling was cASL rather than pASL"
    echo " --bolus   : Bolus duration - {default: 1 s}"
    echo " --t1      : Tissue T1 value - {default: 1.3}"
    echo " --t1b     : Blood T1 value - {default: 1.6}"
    echo " --artoff  : Do not infer arterial signal - e.g. arterial suppression has been applied"
    echo " --fixbolus: Bolus duration is fixed, e.g. by QUIPSSII or CASL (otheriwse it will be estimated)"

}

#


# deal with options

if [ -z $1 ]; then
    Usage
    exit 1
fi




until [ -z $1 ]; do
    case $1 in
	-o) outflag=1 out=$2
	    shift;;
	-i) inflag=1 infile=$2 #input/data file
	    shift;;
	-m) mask=$2
	    shift;;
	--matlab) MCRroot=$2
	    shift;;
	--residuals) residuals=$2
	    shift;;
	--method) method=$2
	    shift;;
	--kernel) kernel=$2
	    shift;;

	--tis) tis=$2
	    shift;;
	--bolus) boluset=1 boluslen=$2
	    shift;;
	--t1) t1set=$2
	    shift;;
	--t1b) t1bset=$2
	    shift;;

	--casl) casl=1
	    ;;
	--bolus) boluset=1 boluslen=$argument
	    takeargs=1;;
	--artoff) artoff=1
	    ;;
	--fixbolus) fixbolus=1
	    ;;
	--casl) casl=1
	    ;;
	-c) calib=$2
	    shift;;
       --calibout) calibout=$2
	    shift;;
	--debug) debug=1
	    ;;
	--devel) devel=1
	    ;;
	*)  Usage
	    echo "Error! Unrecognised option on command line: $1"
	    echo ""
	    exit 1;;
    esac
    shift
done

basil=${FSLDIR}/bin/basil
asl_deblur_core="${FSLDIR}/bin/run_asl_deblur_core ${MCRroot}"

echo "ASL_DEBLUR"

# deal with the temporary directory
tmpbase=`$FSLDIR/bin/tmpnam`
if [ -z $debug ]; then
    tempdir=${tmpbase}_asl_deblur
else
    tempdir=`pwd`/tmp_asl_deblur #make local temp directory and do not delete at end
fi
mkdir $tempdir

# set the output name if not specified
if [ -z $out ]; then
   out=asldata_deblur
fi

# save command line to logfile
echo $# > log_asl_deblur

#check required inputs are present
if [ -z $inflag ]; then
    echo "ERROR: no input file specified"
    exit 1
else
    if [ `${FSLDIR}/bin/imtest $infile` -eq 0 ]; then
	echo "ERROR: $infile is not an image/has not been found"
	exit 1
    fi
fi

if [ -z $mask ]; then
    echo "ERROR: no mask file specified"
    exit 1
else
    if [ `${FSLDIR}/bin/imtest $mask` -eq 0 ]; then
	echo "ERROR: $infile is not an image/has not been found"
	exit 1
    fi
fi

if [ -z $method ]; then
    method=fft
fi
echo "Method is: $method"

if [ -z $kernel ]; then
    kernel=direct
fi
echo "Kernel is: $kernel"


if [ -z $residuals ]; then
# Process using BAISL to get the residuals
# write options file for BASIL
echo "Setting up BASIL"
#deal with TIs

count=0
tislist=""
thetis=`echo $tis | sed 's:,: :g'`
#echo $thetis
for ti in $thetis; do
    count=`expr ${count} + 1`
    tislist=`echo $tislist --ti${count}=$ti`
    #echo $tislist
    
done



#deal with bolus
if [ -z $boluset ]; then
    boluslen=1;
fi

# deal with T1
if [ -z $t1set ]; then
    t1set=1.3;
fi
if [ -z $t1bset ]; then
    t1bset=1.6;
fi

#deal with repeats
tpoints=`fslinfo $infile | grep "^dim4" | sed 's:dim4[ ]*::'`
repeats=`expr $tpoints / $count`

echo "Number of inversion times: $count"
echo "Number of timepoints in data: $tpoints"
echo "Number of repeats in data: $repeats"

echo "--t1=$t1set --t1b=$t1bset" > $tempdir/basil_options.txt

# data acquired using CASL?
if [ ! -z $casl ]; then
    echo "--casl" >> $tempdir/basil_options.txt;
fi

echo "--tau=$boluslen" >> $tempdir/basil_options.txt
echo "--repeats=$repeats" >> $tempdir/basil_options.txt
echo "$tislist" >> $tempdir/basil_options.txt

# Infer arterial component?
if [ ! -z $artoff ]; then
    echo "--inferart" >> $tempdir/basil_options.txt
fi
# fix the bolus duration?
if [ ! -z $fixbolus ]; then
    echo "--infertau" >> $tempdir/basil_options.txt
fi

#we want the residuals from the analysis
echo "--save-residuals" >> $tempdir/basil_options.txt

# Analyse data using BASIL
echo "Calling BASIL"
$basil -i $infile -o $tempdir/basil -m $mask -@ $tempdir/basil_options.txt $basil_options

# work out which is the final step from BASIL
#finalstep=`ls -d $tempdir/basil/step? | sed -e 's:[^ ]*\/::' | sed -n '$ p'`
finalstep=`ls -d $tempdir/basil/step? | sed -n '$ p'`
${FSLDIR}/bin/imcp $finalstep/residuals $tempdir/residuals
else
${FSLDIR}/bin/imcp $residuals $tempdir/residuals
fi

# now run the delburring algorithm with the residuals
#fslinfo $finalstep/residuals
#echo $finalstep/residuals
#echo $infile
#echo $mask
$asl_deblur_core $infile $tempdir/residuals $mask $tempdir/deblurdata $kernel 0 $method

# copy the deblurred data to output
${FSLDIR}/bin/imcp $tempdir/deblurdata $out

# also deblur the calibration image (if supplied)
if [ ! -z $calib ]; then
$asl_deblur_core $calib $finalstep/residuals $mask $tempdir/calibdeblurdata $kernel 0 $method
if [ -z $calibout ]; then
    calibout=${calib}_deblur
fi
${FSLDIR}/bin/imcp $tempdir/calibdeblurdata $calibout
fi

# clearup
if [ -z $debug ]; then
    echo "Tidying up"
    rm -r $tempdir
fi


echo "Output is $out"
echo "ASL_DEBLUR - done."